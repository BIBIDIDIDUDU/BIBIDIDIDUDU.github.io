<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>PHP题目1</title>
    <link href="/2023/03/01/PHP%E9%A2%98%E7%9B%AE1/"/>
    <url>/2023/03/01/PHP%E9%A2%98%E7%9B%AE1/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$key1</span> = <span class="hljs-number">0</span>;<br><span class="hljs-variable">$key2</span> = <span class="hljs-number">0</span>;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$a</span>) &gt; <span class="hljs-number">6000000</span> &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$a</span>) &lt;= <span class="hljs-number">3</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$b</span>) &amp;&amp; <span class="hljs-string">&#x27;8b184b&#x27;</span> === <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>),-<span class="hljs-number">6</span>,<span class="hljs-number">6</span>))&#123;<br>        <span class="hljs-variable">$key1</span> = <span class="hljs-number">1</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Emmm...再想想&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Emmm...&quot;</span>);<br>&#125;<br><br><span class="hljs-variable">$c</span>=(<span class="hljs-keyword">array</span>)<span class="hljs-title function_ invoke__">json_decode</span>(@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$c</span>) &amp;&amp; !<span class="hljs-title function_ invoke__">is_numeric</span>(@<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;m&quot;</span>]) &amp;&amp; <span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;m&quot;</span>] &gt; <span class="hljs-number">2022</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(@<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]) == <span class="hljs-number">2</span> &amp;&amp; <span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>][<span class="hljs-number">0</span>]))&#123;<br>        <span class="hljs-variable">$d</span> = <span class="hljs-title function_ invoke__">array_search</span>(<span class="hljs-string">&quot;DGGJ&quot;</span>, <span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]);<br>        <span class="hljs-variable">$d</span> === <span class="hljs-literal">false</span>?<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no...&quot;</span>):<span class="hljs-literal">NULL</span>;<br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$val</span>)&#123;<br>            <span class="hljs-variable">$val</span>===<span class="hljs-string">&quot;DGGJ&quot;</span>?<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no......&quot;</span>):<span class="hljs-literal">NULL</span>;<br>        &#125;<br>        <span class="hljs-variable">$key2</span> = <span class="hljs-number">1</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no hack&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$key1</span> &amp;&amp; <span class="hljs-variable">$key2</span>)&#123;<br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Hgfks.php&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You&#x27;re right&quot;</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> Emmm...<br></code></pre></td></tr></table></figure><p>首先打开题目就是这样的一大串的php代码，先不管前面的，直接看最后一部分。</p><p>得知只有当key1&#x3D;key2&#x3D;1时才会出现flag。</p><p>废话不多说，看怎么才能得到key&#x3D;1吧。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-variable">$key1</span> = <span class="hljs-number">0</span>;<br><span class="hljs-variable">$key2</span> = <span class="hljs-number">0</span>;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-variable">$b</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$a</span>) &amp;&amp; <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-variable">$a</span>) &gt; <span class="hljs-number">6000000</span> &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$a</span>) &lt;= <span class="hljs-number">3</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$b</span>) &amp;&amp; <span class="hljs-string">&#x27;8b184b&#x27;</span> === <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$b</span>),-<span class="hljs-number">6</span>,<span class="hljs-number">6</span>))&#123;<br>        <span class="hljs-variable">$key1</span> = <span class="hljs-number">1</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Emmm...再想想&quot;</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Emmm...&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>分析a:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">intval</span>()函数——获取变量的整数值，默认为十进制。<br></code></pre></td></tr></table></figure><p>所以需要a的整数值&gt;6000000且a的长度&lt;&#x3D;3，这里用科学计数法来表示a，给a赋值1e8。</p><p>分析b:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-keyword">string</span>,start,length)函数——返回字符串的一部分。<br>如果start参数是负数且length小于或等于start，则length为 <span class="hljs-number">0</span>。<br>注释:<br><span class="hljs-number">1</span>.<span class="hljs-keyword">string</span>和start不可以省略。<br><span class="hljs-number">2</span>.当start为负数的时候，在从字符串结尾的指定位置开始。<br><span class="hljs-number">3</span>.length可以省略，默认为是直到字符串的结尾。<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">md5</span>() 函数计算字符串的 MD5 散列。<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">用python解码：<br>import hashlib<br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100000</span>):<br>    b=<span class="hljs-selector-tag">i</span><span class="hljs-selector-class">.to_bytes</span>(<span class="hljs-number">22</span>, <span class="hljs-string">&#x27;big&#x27;</span>)<br>    m=hashlib<span class="hljs-selector-class">.md5</span>(<span class="hljs-built_in">str</span>(i)<span class="hljs-selector-class">.encode</span>())<span class="hljs-selector-class">.hexdigest</span>()<br>    <span class="hljs-built_in">if</span>(m<span class="hljs-selector-attr">[-6:]</span>==<span class="hljs-string">&quot;8b184b&quot;</span>):<br>        <span class="hljs-built_in">print</span>(i)<br>        <span class="hljs-built_in">print</span>(m)<br></code></pre></td></tr></table></figure><p>所以b的md5值的最后6位需要为”8b184b”,由于这步步骤比较麻烦，上网找了下答案，利用python得出b的值为53724。</p><p>解决了key1之后，来解决key2。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$c</span>=(<span class="hljs-keyword">array</span>)<span class="hljs-title function_ invoke__">json_decode</span>(@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;c&#x27;</span>]);<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$c</span>) &amp;&amp; !<span class="hljs-title function_ invoke__">is_numeric</span>(@<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;m&quot;</span>]) &amp;&amp; <span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;m&quot;</span>] &gt; <span class="hljs-number">2022</span>)&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(@<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">count</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]) == <span class="hljs-number">2</span> &amp;&amp; <span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>][<span class="hljs-number">0</span>]))&#123;<br>        <span class="hljs-variable">$d</span> = <span class="hljs-title function_ invoke__">array_search</span>(<span class="hljs-string">&quot;DGGJ&quot;</span>, <span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>]);<br>        <span class="hljs-variable">$d</span> === <span class="hljs-literal">false</span>?<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no...&quot;</span>):<span class="hljs-literal">NULL</span>;<br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$c</span>[<span class="hljs-string">&quot;n&quot;</span>] <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$val</span>)&#123;<br>            <span class="hljs-variable">$val</span>===<span class="hljs-string">&quot;DGGJ&quot;</span>?<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no......&quot;</span>):<span class="hljs-literal">NULL</span>;<br>        &#125;<br>        <span class="hljs-variable">$key2</span> = <span class="hljs-number">1</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no hack&quot;</span>);<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no&quot;</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$key1</span> &amp;&amp; <span class="hljs-variable">$key2</span>)&#123;<br>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Hgfks.php&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You&#x27;re right&quot;</span>.<span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>分析c:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">json_decode</span>()函数，对 JSON 格式的字符串进行解码，转换为 PHP 变量。<br><span class="hljs-title function_ invoke__">is_array</span>()函数，用于检测变量是否是一个数组。<br></code></pre></td></tr></table></figure><p>所以c的格式是JSON数据格式中的array数组格式。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">is_numeric</span>()函数，用于检测变量是否为数字或数字字符串。<br></code></pre></td></tr></table></figure><p>c中的m键不能是数字或者数字字符串，并且m键的值要&gt;2022。</p><p>c中的n键为数组，个数为2，并且数组的第1个元素也是数组。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">array_search</span>()函数，在数组中搜索某个键值，并返回对应的键名。<br></code></pre></td></tr></table></figure><p>就相当于在n键中查找”DGGJ”，要是没有，直接die。但是又说如果c中遍历到了”DGGJ”，也是直接die。</p><p>接下来很关键：<strong>php中当一个数字与一个字符串&#x2F;字符进行大小比较时，首先系统尝试将此字符串&#x2F;字符转换为整型&#x2F;浮点型，然后进行比较。</strong></p><p>所以当n键对应的值为数字且包含数字0的话，DGGJ被视为0，即可在”其中找到DGGJ“，返回True。</p><p>我们构造出c&#x3D;{“m”:”2023a”,”n”:[[0,1],0]}</p><p>所以，我们可以构造出**?a&#x3D;1e8&amp;&amp;b&#x3D;53724&amp;&amp;c&#x3D;{“m”:”2023a”,”n”:[[0,1],0]}**。</p><p>得到flag。</p><img src="/2023/03/01/PHP%E9%A2%98%E7%9B%AE1/answer.png" class="">]]></content>
    
    
    <categories>
      
      <category>PHP题目合集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP</title>
    <link href="/2022/11/21/PHP/"/>
    <url>/2022/11/21/PHP/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PHP介绍"><a href="#PHP介绍" class="headerlink" title="PHP介绍"></a>PHP介绍</h1><p>PHP（全称：PHP：Hypertext Preprocessor，即”PHP：超文本预处理器”）是一种通用开源脚本语言。</p><h1 id="PHP语法"><a href="#PHP语法" class="headerlink" title="PHP语法"></a>PHP语法</h1><p>PHP 脚本以 <strong><?php** 开始，以 **?></strong> 结束：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>// PHP 代码<br>?&gt;<br></code></pre></td></tr></table></figure><p>PHP 文件的默认文件扩展名是 “.php”。</p><p>PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。</p><p>提供一个简单的 PHP 文件实例，它可以向浏览器输出文本 “Hello World!”：</p><!DOCTYPE html><html><body><h1>My first PHP page</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;body&gt;<br><br>&lt;h1&gt;My first PHP page&lt;/h1&gt;<br><br>&lt;?php<br>echo &quot;Hello World!&quot;;<br>?&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>PHP 中的每个代码行都必须以分号结束。</p><p>通过 PHP，有两种在浏览器输出文本的基础指令：<strong>echo</strong> 和 <strong>print</strong>。</p><p>php注释：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>// 这是 PHP 单行注释<br><br>/*<br>这是<br>PHP 多行<br>注释<br>*/<br>?&gt;<br></code></pre></td></tr></table></figure><h1 id="PHP-变量"><a href="#PHP-变量" class="headerlink" title="PHP 变量"></a>PHP 变量</h1><p>PHP 变量规则：</p><p>变量以 $ 符号开始，后面跟着变量的名称</p><p>变量名必须以字母或者下划线字符开始</p><p>变量名只能包含字母、数字以及下划线（A-z、0-9 和 _ ）</p><p>变量名不能包含空格</p><p>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>$txt=&quot;Hello world!&quot;;<br>$x=5;<br>$y=10.5;<br>?&gt;<br></code></pre></td></tr></table></figure><p>PHP是一门弱类型语言，不必向 PHP 声明该变量的数据类型，PHP 会根据变量的值，自动把变量转换为正确的数据类型。</p><p>局部和全局作用域：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>$x=5; // 全局变量<br><br>function myTest()<br>&#123;<br>    $y=10; // 局部变量<br>    echo &quot;&lt;p&gt;测试函数内变量:&lt;p&gt;&quot;;<br>    echo &quot;变量 x 为: $x&quot;;<br>    echo &quot;&lt;br&gt;&quot;;<br>    echo &quot;变量 y 为: $y&quot;;<br>&#125; <br><br>myTest();<br><br>echo &quot;&lt;p&gt;测试函数外变量:&lt;p&gt;&quot;;<br>echo &quot;变量 x 为: $x&quot;;<br>echo &quot;&lt;br&gt;&quot;;<br>echo &quot;变量 y 为: $y&quot;;<br>?&gt;<br></code></pre></td></tr></table></figure><p>在以上实例中 myTest() 函数定义了 $x 和 $y 变量。 $x 变量在函数外声明，所以它是全局变量 ， $y 变量在函数内声明所以它是局部变量。</p><p>当我们调用myTest()函数并输出两个变量的值, 函数将会输出局部变量 $y 的值，但是不能输出 $x 的值，因为 $x 变量在函数外定义，无法在函数内使用，如果要在一个函数中访问一个全局变量，需要使用 global 关键字。</p><p>然后我们在myTest()函数外输出两个变量的值，函数将会输出全局变量 $x 的值，但是不能输出 $y 的值，因为 $y 变量在函数中定义，属于局部变量。</p><p>在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">&lt;?php<br>$x=5;<br>$y=10;<br><br>function myTest()<br>&#123;<br>    global $x,$y;<br>    $y=$x+$y;<br>    //可以写成下面这样，因为PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中<br>    $GLOBALS[&#x27;y&#x27;]=$GLOBALS[&#x27;x&#x27;]+$GLOBALS[&#x27;y&#x27;];<br>&#125;<br><br>myTest();<br>echo $y; // 输出 15<br>?&gt;<br></code></pre></td></tr></table></figure><p>当一个函数完成时，它的所有变量通常都会被删除，使用 <strong>static</strong> 关键字在定义局部变量时就不会被删除。</p><h1 id="PHP-echo-和-print-语句"><a href="#PHP-echo-和-print-语句" class="headerlink" title="PHP echo 和 print 语句"></a>PHP echo 和 print 语句</h1><p>echo 和 print 区别:</p><p>echo - 可以输出一个或多个字符串</p><p>print - 只允许输出一个字符串，返回值总为 1</p>]]></content>
    
    
    <categories>
      
      <category>开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>攻防世界</title>
    <link href="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    <url>/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><ol><li><p>题目：<strong>robots</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=d7b42b9a-50ff-49d2-89b7-a0e7f960f63a_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=d7b42b9a-50ff-49d2-89b7-a0e7f960f63a_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/Robots1.png" class=""><p> 可以看到访问了robots.txt后出现了<br> Use-agent:*<br> Disallow:<br> Disallow: f1ag_1s_h3re.php<br> 第一行说明该协议对任何搜索引擎爬虫均有效<br> 第三行说明不希望被访问f1ag_1s_h3re.php<br> 所以我们直接访问这个f1ag_1s_h3re.php</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/Robots2.png" class=""><p> 出现flag</p><p> <a href="https://blog.51cto.com/sddai/3134736">Robots协议补充</a></p></li></ol><span id="more"></span><ol start="2"><li><p>题目：<strong>backup</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=bced0b01-4b35-4968-9ec9-1ff751757bff_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=bced0b01-4b35-4968-9ec9-1ff751757bff_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/backup1.png" class=""><p> 按照题目提供的方向，我们需要查看index.php的备份文件<br> php的备份文件有两种：.php~和.php.bak<br> 那么我们先访问index.php~</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/backup2.png" class=""><p> 发现没有找到<br> 那么我们就访问index.php.bak<br> 然后你就会发现有一个文件被下载 用记事本打开</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/backup3.png" class=""><p> 出现flag</p></li><li><p>题目：<strong>cookie</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=24488dcc-cb19-4498-b548-d5a179273eb8_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=24488dcc-cb19-4498-b548-d5a179273eb8_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/cookie1.png" class=""><p> 进入调试窗口（F12键），然后在网页栏刷新页面，切换到到控制台界面，查看源代码，发现有个disabled，删去，找到Cookie，发现有个look-here：“cookie.php”<br> 那么我们是不是要去访问cookie.php呢</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/cookie2.png" class=""><p> 查看cookie.php的消息头<br> 发现flag</p></li><li><p>题目：<strong>disabled_button</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=d48eee8a-4e10-4b3a-913b-e7df2749c4ef_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=d48eee8a-4e10-4b3a-913b-e7df2749c4ef_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/disabled_button1.png" class=""><p> 进入调试窗口（F12键），然后在网页栏刷新页面，切换到到控制台界面，查看源代码，发现有个disabled，删去disabled</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/disabled_button2.png" class=""><p> 按下按钮<br> 出现flag</p></li><li><p>题目：<strong>weak_auth</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=f6b4cf7b-678c-4ebd-93ef-ba82b02de2ac_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=f6b4cf7b-678c-4ebd-93ef-ba82b02de2ac_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/weak_auth1.png" class=""><p> 一开始我们并不知道用户名和密码，点击按钮，提示我们要用admin的用户名登录，可我们还是不知道密码<br> 选择用BP进行爆破<br> (具体操作不做展示)</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/weak_auth2.png" class=""><p> 发现爆破时密码为123456的响应长度不同<br> 输入后密码正确</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/weak_auth3.png" class=""><p> 出现flag</p></li><li><p>题目：<strong>get_post</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=a1711cae-905d-4174-b274-cbc2a922e326_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=a1711cae-905d-4174-b274-cbc2a922e326_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/get_post1.png" class=""><p> 题目需要我们用GET方式提交一个名为a,值为1的变量<br> GET提交变量时可以直接在URL后面用？连接，用&amp;来连接变量</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/get_post2.png" class=""><p> 当我们提供完a&#x3D;1时，题目又要求我们以POST方式随便提交一个名为b,值为2的变量<br> POST方式将表单中的数据放在 form 的数据体中<br> 搜索得知<a href="https://liyang0207.github.io/2019/03/30/POST%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/">POST提交数据的几种方式</a></p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/get_post3.png" class=""><p> 输入这段</p> <form action="http://61.147.171.105:51213/?a=1" method="post">   <input type="text" name="b">   <button type="submit">提交</button> </form>  <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/get_post4.png" class=""><p> 出现flag</p><p> <a href="https://www.runoob.com/tags/html-httpmethods.html">GET POST知识补充</a></p></li><li><p>题目：<strong>simple_php</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=97ccaf1c-b0ba-4152-88c1-10da78135303_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=97ccaf1c-b0ba-4152-88c1-10da78135303_2&amp;task_category_id=3</a><br> 解题思路：</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/simple_php1.png" class=""><p> 可以看到这个是php语言<br> 分析语句：<br> 首先创建了两个GET变量a和b，然后进行了三次判断，第一次判断，同时满足a&#x3D;0和a为真才能显示出flag1这个变量。接下来两个if都是与b相关的。第二个if中，is_numeric()函数判断一个变量是否为数字或者数字字符串，是返回true，否返回false。我们需要这个函数返回false以避免退出程序。第三个if中，b&gt;1234即可获得flag2。</p><p> 所以通过URL传参a&#x3D;ab,b&#x3D;12345a<br> (因为变量a，b定义的是GET方式，所以可以直接在网址后赋值)</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/simple_php2.png" class=""><p> 出现flag</p><p> <a href="https://www.runoob.com/php/php-tutorial.html">php补充知识</a></p></li><li><p>题目：<strong>baby_web</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=b2d9f749-b29c-4877-950d-117258cb09a4_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=b2d9f749-b29c-4877-950d-117258cb09a4_2&amp;task_category_id=3</a><br> 解题思路：<br> 根据题目的描述，是让我们想想初始页面是哪个，那么我们先访问index.php,一般网站的初始页面都是index.php，在URL中输入，发现跳到了1.php</p> <img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/baby_web1.png" class=""><p> 通过检查发现有index.php的存在，打开<br> 出现flag</p><p> 也可以使用BP抓包来寻找</p></li><li><p>题目：<strong>Training-WWW-Robots</strong><br> 题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=45ce489f-d95d-4c5f-9647-70fd9561d778_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=45ce489f-d95d-4c5f-9647-70fd9561d778_2&amp;task_category_id=3</a><br> 解题思路：<br> 同题1再URL后输入robots.txt</p></li><li><p>题目：<strong>unserialize3</strong><br>题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=1013364e-31aa-4643-8322-e126f12c1b82_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=1013364e-31aa-4643-8322-e126f12c1b82_2&amp;task_category_id=3</a><br>解题思路：</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/unserialize3_1.png" class=""><p>先对php进行解读：<br>定义了一个名为xctf的类，定义一个公有的类属性$flag，值为111，定义一个公有的类方法__wakeup()，输出bad requests后退出当前脚本，然后要我们<br>可以看到题目要求我们运用__wakeup()函数漏洞，绕过__wakeup()来拿到flag<br>将php代码复制到PHPstorm里</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/unserialize3_2.png" class=""><p>创建一个新的变量a，用echo输出字符串</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/unserialize3_3.png" class=""><p>当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup的执行。<br>改属性变量个数，将1改为2，并在URL增添 ?code&#x3D;O:4:”xctf”:2:{s:4:”flag”;s:3:”111”;}</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/unserialize3_4.png" class=""><p>出现flag</p><p><a href="https://www.cnblogs.com/xhds/p/12233720.html">序列化与反序列化</a><br><a href="https://blog.spoock.com/2016/11/03/php-wakeup/">__wakeup()函数</a></p></li><li><p>题目：<strong>PHP2</strong><br>题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=cfde0863-d43b-40f2-94c9-fadcb1fea968_2&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=cfde0863-d43b-40f2-94c9-fadcb1fea968_2&amp;task_category_id=3</a><br>解题思路：</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/PHP2_1.png" class=""><p>访问index.phps（phps文件就是php的源代码文件，通常用于提供给用户（访问者）查看php代码，因为用户无法直接通过Web浏览器看到php文件的内容，所以需要用phps文件代替。）<br>题目要求我们需要传入一个id并且这个id进行url解码后的值为admin<br>这里进行一次编码输入后发现报错，查找资料得知浏览器会自动执行一次解码，所以我们需要执行两次编码</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/PHP2_2.png" class=""><p>在URL后输入index.php?id&#x3D;%25%36%31%25%36%34%25%36%64%25%36%39%25%36%65</p><img src="/2022/11/20/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/PHP2_3.png" class=""><p>出现flag</p></li><li><p>题目：<strong>file_include</strong><br>题目网址：<a href="https://adworld.xctf.org.cn/challenges/details?hash=ceb014e8-3a5a-11ed-abf3-fa163e4fa609&amp;task_category_id=3">https://adworld.xctf.org.cn/challenges/details?hash=ceb014e8-3a5a-11ed-abf3-fa163e4fa609&amp;task_category_id=3</a><br>解题思路：</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF-web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
